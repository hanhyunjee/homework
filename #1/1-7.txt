
1.
// int형 변화에 실수값을 대입
import java.util.Scanner;

class FloatToInteger {
    public static void main(String[] args) {
        int a;
        
        a = (int) 10.0;
//       a = 10.0      // 오류

        System.out.println(“a = ” + a); 
    }
}

2.
// 0.0부터 1.0까지 0.001 단위로 증가시켜가며 표시
class LoopFloatInt {
    public static void main(String[] args) { 
        System.out.println(“float    int”);
        System.out.println(“------------------”);
    
        float x = 0.0F;
        for (int i = 0 ; i<=1000; i++, x += 0.001F)
            System.out.println(“%9.7f  %9.7f”, x, (float) i / 1000);
    }
}

3.
// 0.0부터 1.0까지 0.001단위로 증가시키며 제곱 표시(반복을 float형으로 제어)

class SqareFloat {

    public static void main(String[] args) {
        System.out.println("x    x의 제곱");
        System.out.println("---------------");
        
        for (float x = 0.0F; x <= 1.0F; x +=0.001F) 
            System.out.printf("%5.3f    %10.7f", x, x * x);

       }
}



// 0.0부터 1.0까지 0.001단위로 증가시키며 제곱 표시(반복을 int형으로 제어)

class SqureInt {
    
    public static void main(String[] args) {
        System.out.println(" x x의 제곱");
        System.out.println("---------------");
		
	for (int i =0; i <= 1000; i++) {
            float x = (float) i / 1000;
            System.out.printf("%5.3f  %10.7f\n", x, x * x);
        }
    }
}

4. 
// “ABC\n”을 표시

class PrintABC {

    public static void main(String[] args) {
        System.out.println("\"ABC\\n\"");
    }

}


5.
// 요소 수가 5이고 double인 배열
public class DoubleArray {

    public static void main(String[] args) {
        double[] a = new double[5];         // 배열 선언
        
        // 모든 요소의 값 표시
        System.out.println("a[" + 0 + "] =" + a[0]);
        System.out.println("a[" + 1 + "] =" + a[1]);
        System.out.println("a[" + 2 + "] =" + a[2]);
        System.out.println("a[" + 3 + "] =" + a[3]);
        System.out.println("a[" + 4 + "] =" + a[4]);
    }
}




6.
// 배열의 각 요소에 5, 4, 3, 2, 1을 대입해서 표시

public class IntArrayFor {

    public static void main(String[] args) {
        int[] a = new int[5];               // 배열 선언
        
        for (int i =0; i < a.length; i++)
            a[i] = 5 - i ;
        
        for (int i = 0; i< a.length; i++)
            System.out.println("a[" + i + "] =" + a[i]);
	
     }
  }

 }
}



7.

public class IntArrayFor {

    public static void main(String[] args) {
        int[] a = new int[5];               // 배열 선언
        
        for (int i =0; i < a.length; i++)
        	a[i] = 5 - i ;
        
        for (int i = 0; i< a.length; i++)
        	System.out.println("a[" + i + "] =" + a[i]);
    }
}

8.
// 배열의 모든 요소에 난수를 대입한 후 막대 그래프로 표시

import java.util.Random;
import java.util.Scanner;

public class ClumnChart {
    public static void main(String[] args) {
        Random rand = new Random();
        Scanner stdIn = new Scanner(System.in);
        
        System.out.print("요소 수 :");
        int n = stdIn.nextInt();    // 요소 수 읽기
        int[] a =  new int[n];      // 배열 생성
      
        for (int i = 0; i < n; i++)
        	a[i] = 1 + rand.nextInt(10);  //  1~10 난수 
        
        for (int i = 10; i >= 1; i--) {
        	for (int j = 0; j < n; j++)
        		if (a[j] >= i)
        		    System.out.print("*");
        		else
        		    System.out.print(" ");
        	System.out.println();
        }
        
        for (int i = 0; i < 2 * n; i++)
           System.out.print('-');
            System.out.println();
        
        for (int i = 0; i < n; i++)
            System.out.print(i %10 + " ");
            System.out.println();
    }
}




9.
// 배열의 각 요소를 5, 4, 3, 2, 1로 초기화해서 표시

public class IntArray54321 {

    public static void main(String[] args) {
        int[] a = {5, 4, 3, 2, 1};  // 배열 선언 
        
        for (int i = 0; i < a.length; i++)
            System.out.println("a[" + i + "] =" + a[i]);
    }

}

10.
// 배열의 모든 요소에 값을 읽어서 초기값 형식으로 표시

import java.util.Scanner;

public class PrintArray {
    public static void main(String[] args) {
        Scanner stdIn = new Scanner(System.in);
        
        System.out.print("요소 수:");
        int n = stdIn.nextInt();    // 요소 수 입
        int[] a = new int[n];      // 배열 생성
        
        for (int i = 0; i < n; i++) {
            System.out.print("a[" + i + "]=");
            a[i] = stdIn.nextInt();
        }
        
        System.out.print("a = {");
        if (n >= 2)
            for (int i = 0; i < n-1; i++)   //  앞에ㅓ부터 n-1개 요소 표시
                System.out.print(a[i] + ",");
        if (n >= 1)
            System.out.print(a[n-1]);   // 마지막 요소 표시
        System.out.print("}");
    }
}
