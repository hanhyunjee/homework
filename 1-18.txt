1.
import java.awt.Shape;
/**
 * AbstTriangle 클래스는 직각 이등변 삼각형을 나타내는 추상 클래스이다.
 * 이 클래스는 도형을 나타내는 추상 클래스 Shape로 부터 파생된 클래스이다.
 * 구체적인 직각 이등변 삼각형 클래스는 이 클래스로부터 파생시킨다.
 * @author 시바타 @see @see Shape
 * @see TriangleLB TriangleLU TriangleRB TriangleRU
 */

public abstract class AbstTriangle extends Shape{
   /**
    *  한 변의 길이를 나타내는 int형 필드
    */
   private int length;
   
   /**
    * 직각 이등변 삼각형을 생성하는 생성자이다.
    * 한 변의 길이를 인수로 받는다.
    * @param length 생성할 이등변 삼각형의 한 변의 길이
    */
   public AbstTriangle(int length) {
      setLength(length);
   }
   
   /**
    * 한 변의 길이를 반환한다
    * @return 한 변의 길이
    */
   public int getLength() {
      return length;
   }
   
   /**
    * 한 변의 길이를 설정한다
    * @param length 설정한 한 변의 길이
    */
   public void setLength(int length) {
      this.length = length;
   }
   
   /**
    * toString 메서드는 이등변 삼각형과 관련된 정보를 문자열로 반환한다.
    * @return 문자열 "AbstTriangle(length:3)"를 반환한다.
    * 3 부분은 한 변의 길이에 해당하는 값이다.
    */
   public String toString() {
      return "AbstTriangle(length:" + length + ")";
   }
}
2.


import java.awt.Shape;

/**
 * TriangleLB 클래스는 좌하가 직각인 이등변 삼각형 클래스이다. 이 클래스는 직각 이등변 삼각형을 나타내는 추상 클래스
 * AbstTriangle로부터 파생된 클래스이다.
 * 
 * @author 시바타
 * @see Shape
 * @see AbstTriangle
 */
public class TriangleLB extends AbstTriangle {
   /**
    * 좌하가 직각인 이등변 삼각형을 생성한다. 한 변의 길이를 인수로 받는다.
    * 
    * @param length 생성할 이등변 삼각형의 한 변의 길이
    */
   public TriangleLB(int length) {
      super(length);
   }

   /**
    * toString은 우상이 직각인 삼각형의 정보를 문자열로 반환한다.
    * 
    * @return 문자열 "TriangleLB(length:3)"을 반환한다. 3부분은 길이에 해당하는 값이다.
    */
   public String toString() {
      return "TriangleLB(length:" + getLength() + ")";
   }

   /**
    * draw는 좌하가 직각인 삼각형을 그린다. 별표 '*'를 나열해서 그린다.
    */
   public void draw() {
      for (int i = 1; i <= getLength(); i++) {
         for (int j = 1; j <= i; j++)
            System.out.print('*');
         System.out.println();
      }
   }
}






3.

import java.awt.Shape;

/**
 * TriangleLU 클래스는 좌상이 직각인 이등변 삼각형 클래스이다. 이 클래스는 직각 이등변 삼각형을 나타내는 추상 클래스
 * AbstTriangle로부터 파생된 클래스이다.
 * 
 * @author 시바타
 * @see Shape
 * @see AbstTriangle
 */
public class TriangleLU extends AbstTriangle {
   /**
    * 좌상이 직각인 이등변 삼각형을 생성한다. 한 변의 길이를 인수로 받는다.
    * 
    * @param length 생성할 이등변 삼각형의 한 변의 길이
    */
   public TriangleLU(int length) {
      super(length);
   }

   /**
    * toString은 우상이 직각인 삼각형의 정보를 문자열로 반환한다.
    * 
    * @return 문자열 "TriangleLU(length:3)"을 반환한다. 3부분은 길이에 해당하는 값이다.
    */
   public String toString() {
      return "TriangleLU(length:" + getLength() + ")";
   }

   /**
    * draw는 좌상이 직각인 삼각형을 그린다. 별표 '*'를 나열해서 그린다.
    */
   public void draw() {
      for (int i = getLength(); i >= 1; i--) {
         for (int j = 1; j <= i; j++)
            System.out.print('*');
         System.out.println();
      }
   }
}







4.

import java.awt.Shape;

/**
 * TriangleRU 클래스는 우하가 직각인 이등변 삼각형 클래스이다. 이 클래스는 직각 이등변 삼각형을 나타내는
 * AbstTriangle로부터 파생된 클래스이다.
 * 
 * @author 시바타
 * @see Shape
 * @see AbstTriangle
 */

public class TriangleRB extends AbstTriangle {
   /**
    * 우하가 직각인 이등변 삼각형을 생성한다. 한 변의 길이를 인수로 받는다.
    * 
    * @param length 생성할 이등변 삼각형의 한 변의 길이
    */
   public TriangleRB(int length) {
      super(length);
   }

   /**
    * toString은 우하가 직각인 삼각형의 정보를 문자열로 반환한다.
    * 
    * @return 문자열 "TriangleLB(length:3)"을 반환한다. 3부분은 길이에 해당하는 값이다.
    */

   public String toString() {
      return "TriangleRB(length:" + getLength() + ")";
   }

   /**
    * draw는 우하가 직각인 삼각형을 그린다. 별표 '*'를 나열해서 그린다.
    */

   public void draw() {
      for (int i = getLength(); i >= 1; i--) {
         for (int j = 1; j <= getLength() - i; j++)
            System.out.print(' ');
         for (int j = 1; j <= i; j++)
            System.out.print('*');
         System.out.println();
      }
   }
}


5.

import java.awt.Shape;

/**
 * TriangleRU 클래스는 우상이 직각인 이등변 삼각형 클래스이다. 이 클래스는 직각 이등변 삼각형을 나타내는
 * AbstTriangle로부터 파생된 클래스이다.
 * 
 * @author 시바타
 * @see Shape
 * @see AbstTriangle
 */

public class TriangleRU extends AbstTriangle {
   /**
    * 우상이 직각인 이등변 삼각형을 생성한다. 한 변의 길이를 인수로 받는다.
    * 
    * @param length 생성할 이등변 삼각형의 한 변의 길이
    */
   public TriangleRU(int length) {
      super(length);
   }

   /**
    * toString은 우상이 직각인 삼각형의 정보를 문자열로 반환한다.
    * 
    * @return 문자열 "TriangleLB(length:3)"을 반환한다. 3부분은 길이에 해당하는 값이다.
    */

   public String toString() {
      return "TriangleRU(length:" + getLength() + ")";
   }

   /**
    * draw는 우상이 직각인 삼각형을 그린다. 별표 '*'를 나열해서 그린다.
    */

   public void draw() {
      for (int i = getLength(); i >= 1; i--) {
         for (int j = 1; j <= getLength() - i; j++)
            System.out.print(' ');
         for (int j = 1; j <= i; j++)
            System.out.print('*');
         System.out.println();
      }
   }
}


6. 


import java.util.Scanner;

class TriangleTester {

	public static void main(String[] args) {
		Scanner stdIn = new Scanner(System.in);
		System.out.print("삼각형의 개수: ");
		int no = stdIn.nextInt();	//도형의 개수를 입력
		AbstTriangle[] p = new AbstTriangle[no];
		
		for (int i = 0; i < no; i++) {
			int type;
			do {
				System.out.print((i+1) + "번의 삼각형 종류 (1..좌하 직각/2.. 좌상 직각" + 										"/3..우하 직각/4..우상 직각) :");
				type = stdIn.nextInt();
			} while (type < 1 || type > 4);
			
			System.out.print("길이: ");
			int len = stdIn.nextInt();
			p[i] = (type == 1) ? new TriangleLB(len) :
				   (type == 2) ? new TriangleLU(len) :
				   (type == 3) ? new TriangleRB(len) :
					   			 new TriangleRU(len);
		}
		for (AbstTriangle s : p) {
			s.print();
			System.out.println();
		}
	}
}
















13.

import java.util.Random;
import java.util.Scanner;

public abstract class Player {
	int hand;							//손 (0:가위/1:바위/2:보)
	public abstract int nextHand();    	//다음 손 결정
}
//가위바위보 사람 플레이어 클래스
 
public class HumanPlayer extends Player {
	private static Scanner stdIn;
	static {
		stdIn = new Scanner(System.in);
	}
	
	//손 결정(키보드를 통해 입력)
	public int nextHand() {
		do {
			System.out.print("가위바위보!!0..가위/1..바위/2..보: ");
			hand = stdIn.nextInt();
		} while (hand < 0 || hand > 2);
		return hand;
	}
}

//가위바위보 컴퓨터 플레이어 클래스

public class ComputerPlayer extends Player {
	private static Random rand;
	static {
		rand = new Random();
	}
	
	//손 결정(난수를 통해 생성)
	public int nextHand() {
		return rand.nextInt(3);
	}
}










16.


import java.util.Scanner;

class FingerFlashing {
	public static void main(String[] args) {
		Scanner stdIn = new Scanner(System.in);
		HumanPlayer hp = new HumanPlayer();
		ComputerPlayer cp = new ComputerPlayer();
		String[] hands = {"가위", "바위", "보"};
		
		int retry; // 다시 한번?
		do {
			//컴퓨터의 손 생성
			int comp = cp.nextHand();
			
			//사람의 손 생성(읽기)
			int user = hp.nextHand();
			
			//양쪽의 손을 표시
			System.out.println("나는 "  + hands[comp] + "이고, 당신은 " + hands[user] 								+ "입니다.");
			//판정
			int judge = (user - comp + 3) % 3;
			switch (judge) {
			case 0 : System.out.println("비겼습니다. "); break;
			case 1 : System.out.println("당신이 졌습니다... "); break;
			case 2 : System.out.println("당신이 이겼습니다!!! "); break;
			}
			
			//다시 한번 할래?
			do {
				System.out.print("다시 한번? (0) 아니오 (1) 예: ");
				retry = stdIn.nextInt();
			} while (retry != 0 && retry != 1);
		} while (retry == 1);
	}
}











18.

//human 버전5 클래스는 인간 클래스이다.
//@author 시바타
public class Human {

		//이름을 나타내는 string형 필드
		private String name;
		//신장을 나타내는 int필드
		private int height;
		//체중 int 필드
		private int weight;
		//생일 Day 필드		
		private Day birthday;

		//사람 클래스 휴먼의 생성자
//		@param name 이름 문자열
//		@param height 신장 숫자
//		@param weight 체중 숫자
//		@param birthday 생일 날짜
		
		public Human(String name, int height, int weight, Day birthday) {
			this.name = name;
			this.height = height;
			this.weight = weight;
			this.birthday = new Day(birthday);
		}
		
		//이름 확인
		public String getName() { return name; }
		//신장 확인
		public int getHeight() { return height; }
		//체중 확인
		public int getWeight() { return weight; }
		//생일 확인
		public Day getBirthDay() {return new Day(birthday);}
		//살이 찐다. 인수에 지정한 값만큼 체중 증가.
		//@param w
		public void gainWeight(int w) {weight=w;}
		//살이 빠진다. 인수에 지정한 값만큼 체중 감소
		//@param w
		public void reduceWeight(int w) {weight-=w;}
		//이름 인장 체중을 표시한다.
		public void putData() {
			System.out.println("이름:" + name);
			System.out.println("신장:" + height +"cm");
			System.out.println("체중:" + weight +"kg");
		}

		//문자열 표현 반환
		
		@Override
		public String toString() {
			return "{" + name + ": " + height + "cm " + weight + "kg " + birthday + 						"출생}";
		}
	}
