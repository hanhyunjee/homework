1. 무한 루틴을 사용하여 1~10까지 출력하도록 하고
    짝수와 홀수로 나누어 출력

public class EvenOdd {
    public static void main(String[] args) {
	int i = 0; 
	while(i<=10) {
		i++;
		if(i>10) break;
			
		if(i%2 == 0) {
			System.out.println("짝수 " + i);
		} else {
			System.out.println("홀수 " + i);
		}		
	}
    }	
}



2. 숫자를 입력하지 않으면 Exception이 발생하도록 Try~catch 사용

import java.util.InputMismatchException;
import java.util.Scanner;

public class Test02 {
    public static void main(String[] args) {
	Scanner str = new Scanner(System.in);
	System.out.print("입력하시오:");
	int input;

	try {
	    input=str.nextInt();
	    System.out.println("값은:" + input);
			
	} catch (InputMismatchException erros) {
	    System.out.println("오류발생");
			
	    System.out.println(errors);
	}
    }
}


3. 숫자를 0으로 나누면 오류 발생

import java.util.Scanner;

public class Division {
    public static void main(String[] args) {
	Scanner sc = new Scanner(System.in);
	 
	System.out.println("나누어질 숫자를 입력하시오 : ");
	int number = sc.nextInt();
	System.out.println("나눌 숫자를 입력하시오 : ");
	int zeroinput = sc.nextInt();
	if(zeroinput == 0) {
		System.out.println("오류발생");
		System.exit(0);
			
	double result = number/zeroinput;
	System.out.println("결과 : " + result);
	}	
    }
}


4. 아규먼트의 갯수를 확인하고 내용을 출력

public class MainTest { 
    public static void main(String[] args) { 

    for(int i=0; i < args.length; i++) { 

    System.out.println("args[" + i + "] = " + args[i]);             

      }
   }
}



5. 두개의 문자열 숫자를 더해서 출력

import java.util.Scanner;
public class addTwoNumber {
    static Scanner sc = new Scanner(System.in);
	
    public static void main(String[] args) {
	System.out.print("서로 더할 첫번째 숫자 입력 : ");
	String strnum1 = sc.next();
	System.out.println();
	System.out.print("서로 더할 두번째 숫자 입력 : ");
	String strnum2 = sc.next();
		
	double dnum1 = Double.parseDouble(strnum1);
	double dnum2 = Double.parseDouble(strnum2);
		
	double sum = (dnum1 + dnum2);
		
	System.out.println("서로 더한 결과 : " + sum);
		
    }
}

