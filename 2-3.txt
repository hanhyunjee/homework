1. 10진수 2진수로 변환하는 프로그램을 사용자 정의 함수로 생성

import java.util.Scanner;

// 10진수 2진수로 변환하는 프로그램을 사용자 정의 함수로 생성
public class Bianary {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		System.out.println("숫자를 입력하세요 : ");
		int num = sc.nextInt();
		int num2 = num;

		// 10진수를 2진수로 바꿀 때 몇 번의 나눗셈을 하는지 확인 
		int i = 0;
		while (num2 > 0) {
			num2 /= 2;
			i++;
		}
		// 확인된 2진수의 개수를 통해 각 2진수를 배열에 넣음
		int[] arr = new int[i];
		int j = 0;

		while (num2 > 0) {
			arr[j] = num2 % 2;
			num2 /= 2;
			j++;
		}
		// 배열 거꾸로 출력 
		System.out.print("10진수 " + num + "의 2진수는 ");
		for (i = arr.length; i > 0; i--) {
			System.out.print(arr[i-1]);
		}
		System.out.println(" 입니다.");

	}
}

2. 지정값과 시프트 할 방향과 숫자를 입력하면 그 결과를 출력
import java.util.Scanner;

public class test02 {

	public static void main(String[] args) {
		String t ;
		Scanner str = new Scanner(System.in);
		System.out.print("입력하시오:");
		int du = str.nextInt();
	
	
		
	
		System.out.println( 100 << du);
	
			System.out.println( 100>>du);



3. 전위 연산자와 후위 연산자의 차이를 보여 줄 수 있는 코드 작성

public class Operator {

    public static void main(String[] args) {
		
    // 전위연산자 > 우선 변수를 1증가 또는 감소시킨 뒤 다른연산자와 계산
    // 후위연산자 > 다른 연산자를 먼저 처리한 후 변수를 1증가 또는 감소
		
    int x = 0;
    int y = 0;
		
    System.out.println("전위연산자 : " + ++x * 2); // 전위연산자 : 1 증가 후 *2 수행됨
    System.out.println("후위연산자 : " + y++ * 2); // 후위연산자 : *2가 먼저 수행됨 -> 후에 1증가
		
    System.out.println();
		
    System.out.println("전위연산자 : " + ++x);
    System.out.println("후위연산자 : " + y++); // 후위연산자 : 위의 계산 후 1증가 -> 후에 1증가
		
    System.out.println();
		
    System.out.println("전위연산자 : " + ++x * 2);
    System.out.println("후위연산자 : " + y++ * 2); // 후위연산자 : 위의 계산 후 2가 됨
    }
}

4. 50~100사이 값중에서 3의 배수중 2의 배수를 제외하고 출력

public class D0609{

    public static void main(String[] args) {
		
        for(int i=50; i<=100; i++) {
            if(i%2==0) {
                continue;
            } else if (i%3 == 0) {
                System.out.println(i);
            }			
        }		
    }
}



5-1. 삼항 연산자를 사용하여 최대와 최대값 계산

import java.util.Scanner;
public class FindMaxMin {
    static Scanner sc = new Scanner(System.in);

    public static void main(String[] args) {
        System.out.println("비교할 숫자의 갯수 : ");
	int num = sc.nextInt();
	double arr[] = new double[num]; // 입력받은 값으로 배열의 크기 지정
		
	for(int i=0; i<num; i++) {
	    System.out.println("수를 입력하시오 : ");
	    arr[i] = sc.nextDouble();  //  입력받은 값들을 배열에 저장
        }
	double max= arr[0];  // 최대값 선언
	double min= arr[0];  // 최소값 선언
		
	for(int i=0; i<num; i++) {
            max =  max < arr[i] ? arr[i] : arr[0]; // 삼항연산자를 이용하여 
            min =  min > arr[i] ? arr[i] : arr[0]; // 크기를 비교한 후 최대값, 최소값을                                                       저장
        }
	System.out.println("최대값은 :" + max +"최소값은 : "+ min);
    }
}




5-2.

import java.util.Arrays;
import java.util.Random;

public class Test05 {
	public static void main(String[] args) {
		int[] arr = new int[10]; // 배열 크기 10으로 지정한다.
		System.out.println("10개의 랜덤한 수");
		Random rd = new Random();

		for (int i = 0; i < arr.length; i++) {
			arr[i] = rd.nextInt(100)+1;     // 랜덤한 수 10개 입력
		}
		
		System.out.println("랜덤한 10개의 수");
		for (int i = 0; i < arr.length; i++) {    // 10개의 수 출력
			System.out.print(arr[i] + " ");
		}

		int max = arr[0];   // 0인덱스 임의로 최대값 설정
		int min = arr[0];   // 0인덱스 임의로 최대값 설정
		
		for(int a = 1; a < arr.length; a++) {  // 새로운 값과 이전값을 차례대로 														비교하며 최대 최소값 출력
			if(max < arr[a])
				max = arr[a];
			if(min > arr[a])
				min = arr[a];
		}
		System.out.println();
		
		System.out.println("최소값:" + min);
		System.out.println("최대값:" + max);
	}
}
